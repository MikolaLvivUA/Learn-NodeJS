На реальних проектах, щоб не писати все в одному файлі app.js всю логіку розділяють на модулі.

Фінальні обробники називаються контролерами і вони виносяться в папку controllers;
Сама папка controllers ділиться на логічні підпапки з обробниками під конкретні цілі, для прикладу папка user;
В підпапках обовязково створюємо файл index.js для того щоб це можна було легше контролити, цим головним файлом.
також в папці controller створюєм файл index. файл index оприділяється нодою сама по дефолту тому її не треба вказувати
в шляхах

Controller - це така річ яка просто наказує що куда зробити, контроллери мають бути максимально мінімалістичними

Middleware - це проміжний обробник перед, який стоїть між нашим шляхом і кінцевим обробником, використовуються для якоїсь
перевірки попрядку.


(Бази даних)
ORM - object relation mapping - дозволяє навчити базу даних бачити ноду а ноду бачити базу даних, як приклад Sequelize
яка вміє працювати зі всіма SQL подібними базами даних. MySQL, MariaDB, PostGress, SQLLight.. або Mongoose для роботи
з Mongo.


Чистий драйвер який є під капотом Sequelize називається mySql2 це просто пакет з npm був перший але вийшов другий який пофіксав купу проблем першого.



Папка database - зберігає все що відноситься до баз даних (створюєм файл index і dataBase.provider)



Папка validators в ній знаходяться всі валідатори