
NPM - Node Package Manager - це велика бібліотека де лежать всі пакети для ноди.


npm init --y створити проект і підтвердити усе створює дейсон файл в якому зберігаються всі залежності підключені
бібліотеки і т.д. повністю описує наш проект

Express - це швидкий гнучкий фреймворк для додатків Node.js який дозволяє робити нам всякі речі на ноді дуже швидко (
заміняє http модуль).

npm install express --save - команда для установки Express фреймворка можна і без --save, якщо ввести - g тоді
встановить глобально на компі і можна доступатись буде з любої точки можна замість install вказати просто i.

в package.json фалі в dependencies зберігаються всі наші підключені фреймворки і версії їхні, ще через залежності
можна інсталити просто вводячи туди назви і вебшторм запропонує заінсталити це CTRL-Space дозволяє побачити всі
актуальні версії

HTTP протокол має 8 методів з них використовується часто 5 GET POST PUT DELETE PATCH OPTION(під капотом сам працює)

GET - для того щоб щось отримати браузер з коробки вміє ходити тільки по гетам

POST - для того щоб щось створити

PUT - повністю оновити або створити

DELETE - видалити

PATCH - часткове оновлення



template engines(template engine) - це темплейт двіжки які дозволяють кастомізувати нашу статичну html сторінку їх є
дуже багато один з прикладів це handlebars, ці двіжки дозволяють нам дані зчитувати з фронта html сторінки і дані
відправляти на бек, але темплейт двіжки не використовують для фронта а для емейлів для сторінок які не часто юзаються
і т.д.;

npm i express-handlebars - таким чином ми встановлюєм express - handlebars



"devDependencies": {
    "@types/express": "^4.17.1",
    "@types/express-handlebars": "^0.0.33"
  } - таким чином ми створюєм залежності тільки для розробників в яку інсталим типізації для різних фреймворків і лібок,
  для того щоб нам підтягувався синтаксис і т.д.

статичні фали за допомогою яких нода працює з фронтом створюються в папці static
